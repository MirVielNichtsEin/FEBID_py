# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build febid for win and mac

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
  workflow_dispatch:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        include:
          - arch: arm64
            os: macos-latest
            pypthon-version: "3.7-3.11"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install build twine
#    - name: Build package for linux
#      if: ${{ matrix.os == 'ubuntu-latest' }}
#      uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
#      with:
#        python-versions: ${{ matrix.python-version }}
#        build-requirements: 'setuptools cython numpy'
#        pre-build-command: python -m pip install --upgrade pip setuptools wheel
    - name: Build package for mac and windows
      if: ${{ matrix.os == 'windows-latest' }} || ${{ matrix.os == 'macos-latest' }}
      run: |
        python -m build --outdir dist

    - name: Save wheels as artifacts
      uses: actions/upload-artifact@v3
      with:
        path: dist/*
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        twine upload dist/*.whl
    - name: Publish sdist to PyPi
      if: ${{ matrix.os == 'windows-latest' }} && {{ matrix.python-version == '3.11' }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        twine upload --repository testpypi dist/*.tar.gz
